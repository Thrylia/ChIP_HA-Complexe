// Global parameters 
params {
    threads = 4                         // Threads
    output_root = "$PWD/results"        // Root path for output directory
    input_root = "../data"              // Root path for input files 
}

// Executive profiles
profiles {
    docker {
        process {
            withContainer = true    // Docker usage authorised
            executor = 'local'

            // Processus 1&3 : FastQC + MultiQC
            withName: 'QUALITY_CHECK' {
                container = '/path/to/local/ImageDocker_fastqc_0.12.1.tar'
            }
            withName: 'GROUP_QC' {
                container = '/path/to/local/ImageDocker_multiqc_0.12.1.tar'
            }

            // Processus 2 : Cutadapt + FastQC + MultiQC
            withName: 'TRIM_READS' {
                container = '/path/to/local/ImageDocker_cutadapt_4.5.tar'
            }
            withName: 'TRIM_QUALITY_CHECK' {
                container = '/path/to/local/ImageDocker_fastqc_0.12.1.tar'
            }
            withName: 'TRIM_GROUP_QC' {
                container = '/path/to/local/ImageDocker_multiqc_0.12.1.tar'
            }

            // Processus 3 : Bowtie2 + Samtools
            withName: 'BOWTIE2_ALIGN' {
                container = '/path/to/local/ImageDocker_bowtie2_2.5.4.tar'
                container = '/path/to/local/ImageDocker_samtools_1.18.tar'
            }
        }
    }
    core_cluster {
        process {
            executor = 'slurm'
            queue = 'batch'
            cpus = params.threads
            memory = '3GB'
            conda = true
            withContainer = true
        }
        // Load the modules in Core cluster
        // Picard, MACS, deepTools versions different than the article
        process.beforeScript = [
            'QUALITY_CHECK': 'module load fastqc/0.12.1',
            'GROUP_QC': 'module load multiqc/1.13',
            'TRIM_READS': 'module load cutadapt/4.5',
            'TRIM_QUALITY_CHECK': 'module load fastqc/0.12.1',
            'TRIM_GROUP_QC': 'module load multiqc/1.13',
            'ALIGN_AND_FILTER': 'module load bowtie2/2.5.4', 
            'ALIGN_AND_FILTER': 'module load samtools/1.18',
            'COVERAGE_NORM': 'module load deeptools/3.5.4',
            'MATRIX_COMPUTE': 'module load deeptools/3.5.4',
            'GENERATE_PLOT': 'module load deeptools/3.5.4',
            'COUNT_READ_PAIRS': 'module load samtools/1.18',
            'SUBSAMPLE_BAM': 'module load samtools/1.18',
            'MERGE_BAM': 'module load samtools/1.18',
            'SORT_BAM': 'module load samtools/1.18',
            'REMOVE_REGIONS': 'module load bedtools/2.30.0',
            'REMOVE_REGIONS': 'module load samtools/1.18',
            'GET_STATS': 'module load samtools/1.18',
            'PEAKS_CALLING': 'module load macs2/2.2.7.1',
            'ANNOTATE_PEAKS': 'module load homer/4.11',
            'PICARD_MARKDUP': 'module load picard/2.23.5'
        ]
        // Singularity Containers, examples
        // process.container = [
        //    'ALIGN_AND_FILTER' : '/path/to/local/singularity-bowtie2-2.5.4--he20e202_0.sif',
        //    'PICARD_MARKDUP' : '/path/to/local/singularity-picard-3.1.1--hdfd78af_0.sif'
        // ]
        // Specific partitions 
        process.clusterOptions = [
            'ALIGN_AND_FILTER': '--partition=long --mem=25G',
            'PICARD_MARKDUP': '--partition=long --mem=25G'
        ]
    }

}

// Print the parameters used 
println "Selected configuration :"
println " - Input root: ${params.input_root}"
println " - Output root: ${params.output_root}"
println " - Threads: ${params.threads}"